"""init

Revision ID: e9e2cbf36c25
Revises: 
Create Date: 2025-08-23 02:01:33.318904

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e9e2cbf36c25'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('allocation_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('requires_customer', sa.Boolean(), nullable=True),
    sa.Column('is_reservable', sa.Boolean(), nullable=True),
    sa.Column('auto_assign_customer', sa.Boolean(), nullable=True),
    sa.Column('priority_level', sa.Integer(), nullable=True),
    sa.Column('max_allocation_days', sa.Integer(), nullable=True),
    sa.Column('color_code', sa.String(length=7), nullable=True),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('allocation_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_allocation_types_code'), ['code'], unique=True)

    op.create_table('carrier_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('has_api_integration', sa.Boolean(), nullable=True),
    sa.Column('api_type', sa.String(length=20), nullable=True),
    sa.Column('supports_real_time_tracking', sa.Boolean(), nullable=True),
    sa.Column('supports_same_day', sa.Boolean(), nullable=True),
    sa.Column('supports_next_day', sa.Boolean(), nullable=True),
    sa.Column('supports_international', sa.Boolean(), nullable=True),
    sa.Column('supports_temperature_controlled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('carrier_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_carrier_types_code'), ['code'], unique=True)

    op.create_table('customer_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('allows_tender_allocation', sa.Boolean(), nullable=True),
    sa.Column('requires_pre_approval', sa.Boolean(), nullable=True),
    sa.Column('default_credit_limit', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('default_discount_percent', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('default_payment_terms_days', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('customer_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_customer_types_code'), ['code'], unique=True)

    op.create_table('delivery_methods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('estimated_days', sa.Integer(), nullable=True),
    sa.Column('cost_per_kg', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('cost_per_km', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('document_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_mandatory', sa.Boolean(), nullable=True),
    sa.Column('is_customer_visible', sa.Boolean(), nullable=True),
    sa.Column('max_file_size_mb', sa.Integer(), nullable=True),
    sa.Column('allowed_extensions', sa.String(length=100), nullable=True),
    sa.Column('auto_generate', sa.Boolean(), nullable=True),
    sa.Column('template_path', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('document_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_document_types_code'), ['code'], unique=True)

    op.create_table('location_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_storage_location', sa.Boolean(), nullable=True),
    sa.Column('is_picking_location', sa.Boolean(), nullable=True),
    sa.Column('is_staging_location', sa.Boolean(), nullable=True),
    sa.Column('max_weight_capacity_kg', sa.Float(), nullable=True),
    sa.Column('supports_temperature_control', sa.Boolean(), nullable=True),
    sa.Column('requires_special_access', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('location_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_location_types_code'), ['code'], unique=True)

    op.create_table('movement_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('direction', sa.String(length=10), nullable=False),
    sa.Column('affects_stock', sa.Boolean(), nullable=True),
    sa.Column('auto_generate_document', sa.Boolean(), nullable=True),
    sa.Column('document_prefix', sa.String(length=10), nullable=True),
    sa.Column('requires_approval', sa.Boolean(), nullable=True),
    sa.Column('approval_level', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('movement_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_movement_types_code'), ['code'], unique=True)

    op.create_table('notification_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_email_enabled', sa.Boolean(), nullable=True),
    sa.Column('is_sms_enabled', sa.Boolean(), nullable=True),
    sa.Column('is_push_enabled', sa.Boolean(), nullable=True),
    sa.Column('is_system_notification', sa.Boolean(), nullable=True),
    sa.Column('email_template', sa.String(length=100), nullable=True),
    sa.Column('sms_template', sa.String(length=100), nullable=True),
    sa.Column('push_template', sa.String(length=100), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('retry_interval_minutes', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('notification_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_notification_types_code'), ['code'], unique=True)

    op.create_table('package_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_fragile', sa.Boolean(), nullable=False),
    sa.Column('is_stackable', sa.Boolean(), nullable=False),
    sa.Column('max_stack_height', sa.Integer(), nullable=True),
    sa.Column('standard_length', sa.Float(), nullable=True),
    sa.Column('standard_width', sa.Float(), nullable=True),
    sa.Column('standard_height', sa.Float(), nullable=True),
    sa.Column('standard_weight', sa.Float(), nullable=True),
    sa.Column('special_handling_required', sa.Boolean(), nullable=True),
    sa.Column('handling_instructions', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('package_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_package_types_code'), ['code'], unique=True)

    op.create_table('packaging_materials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('material_type', sa.String(length=20), nullable=True),
    sa.Column('is_reusable', sa.Boolean(), nullable=True),
    sa.Column('is_fragile_protection', sa.Boolean(), nullable=True),
    sa.Column('is_temperature_protection', sa.Boolean(), nullable=True),
    sa.Column('length_cm', sa.Float(), nullable=True),
    sa.Column('width_cm', sa.Float(), nullable=True),
    sa.Column('height_cm', sa.Float(), nullable=True),
    sa.Column('weight_g', sa.Float(), nullable=True),
    sa.Column('cost_per_unit', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('packaging_materials', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_packaging_materials_code'), ['code'], unique=True)

    op.create_table('packing_slips',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('ps_number', sa.String(length=50), nullable=False),
    sa.Column('ps_date', sa.Date(), nullable=False),
    sa.Column('do_number', sa.String(length=50), nullable=True),
    sa.Column('do_date', sa.Date(), nullable=True),
    sa.Column('do_document_url', sa.String(length=255), nullable=True),
    sa.Column('erp_ps_id', sa.String(length=50), nullable=True),
    sa.Column('erp_do_id', sa.String(length=50), nullable=True),
    sa.Column('erp_sync_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('ps_document_url', sa.String(length=255), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('packing_slips', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_packing_slips_do_number'), ['do_number'], unique=False)
        batch_op.create_index(batch_op.f('ix_packing_slips_ps_number'), ['ps_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_packing_slips_public_id'), ['public_id'], unique=True)

    op.create_table('priority_levels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('sla_hours', sa.Integer(), nullable=True),
    sa.Column('escalation_hours', sa.Integer(), nullable=True),
    sa.Column('color_code', sa.String(length=7), nullable=True),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('level'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('priority_levels', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_priority_levels_code'), ['code'], unique=True)

    op.create_table('product_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=True),
    sa.Column('requires_batch_tracking', sa.Boolean(), nullable=True),
    sa.Column('requires_expiry_tracking', sa.Boolean(), nullable=True),
    sa.Column('shelf_life_days', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('product_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_product_types_code'), ['code'], unique=True)

    op.create_table('sector_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('requires_special_handling', sa.Boolean(), nullable=True),
    sa.Column('default_payment_terms', sa.Integer(), nullable=True),
    sa.Column('default_delivery_terms', sa.String(length=50), nullable=True),
    sa.Column('requires_temperature_monitoring', sa.Boolean(), nullable=True),
    sa.Column('requires_chain_of_custody', sa.Boolean(), nullable=True),
    sa.Column('special_documentation', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('sector_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sector_types_code'), ['code'], unique=True)

    op.create_table('shipping_methods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('estimated_delivery_days', sa.Integer(), nullable=False),
    sa.Column('max_weight_kg', sa.Float(), nullable=True),
    sa.Column('max_dimensions_cm', sa.String(length=20), nullable=True),
    sa.Column('base_cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('cost_per_kg', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('cost_per_km', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('fuel_surcharge_percent', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('includes_insurance', sa.Boolean(), nullable=True),
    sa.Column('includes_tracking', sa.Boolean(), nullable=True),
    sa.Column('requires_signature', sa.Boolean(), nullable=True),
    sa.Column('supports_cod', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('shipping_methods', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_shipping_methods_code'), ['code'], unique=True)

    op.create_table('status_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_initial_status', sa.Boolean(), nullable=True),
    sa.Column('is_final_status', sa.Boolean(), nullable=True),
    sa.Column('is_error_status', sa.Boolean(), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=True),
    sa.Column('color_code', sa.String(length=7), nullable=True),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('css_class', sa.String(length=50), nullable=True),
    sa.Column('auto_transition_after_hours', sa.Integer(), nullable=True),
    sa.Column('requires_approval', sa.Boolean(), nullable=True),
    sa.Column('sends_notification', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('entity_type', 'code', name='uq_status_entity_code')
    )
    with op.batch_alter_table('status_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_status_types_code'), ['code'], unique=False)
        batch_op.create_index(batch_op.f('ix_status_types_entity_type'), ['entity_type'], unique=False)

    op.create_table('system_configurations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('config_key', sa.String(length=100), nullable=False),
    sa.Column('config_value', sa.Text(), nullable=True),
    sa.Column('config_type', sa.String(length=20), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_sensitive', sa.Boolean(), nullable=True),
    sa.Column('validation_rule', sa.Text(), nullable=True),
    sa.Column('default_value', sa.Text(), nullable=True),
    sa.Column('is_user_editable', sa.Boolean(), nullable=True),
    sa.Column('required_role', sa.String(length=20), nullable=True),
    sa.Column('last_modified_by', sa.String(length=50), nullable=True),
    sa.Column('last_modified_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('system_configurations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_system_configurations_category'), ['category'], unique=False)
        batch_op.create_index(batch_op.f('ix_system_configurations_config_key'), ['config_key'], unique=True)

    op.create_table('system_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level', sa.String(length=10), nullable=False),
    sa.Column('logger_name', sa.String(length=100), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('module', sa.String(length=50), nullable=True),
    sa.Column('function', sa.String(length=50), nullable=True),
    sa.Column('line_number', sa.Integer(), nullable=True),
    sa.Column('exception_type', sa.String(length=100), nullable=True),
    sa.Column('exception_message', sa.Text(), nullable=True),
    sa.Column('stack_trace', sa.Text(), nullable=True),
    sa.Column('request_id', sa.String(length=36), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('system_logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_system_logs_level'), ['level'], unique=False)
        batch_op.create_index(batch_op.f('ix_system_logs_logger_name'), ['logger_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_system_logs_timestamp'), ['timestamp'], unique=False)

    op.create_table('temperature_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('min_celsius', sa.Float(), nullable=True),
    sa.Column('max_celsius', sa.Float(), nullable=True),
    sa.Column('optimal_celsius', sa.Float(), nullable=True),
    sa.Column('celsius_display', sa.String(length=20), nullable=True),
    sa.Column('humidity_range', sa.String(length=20), nullable=True),
    sa.Column('special_storage_requirements', sa.Text(), nullable=True),
    sa.Column('color_code', sa.String(length=7), nullable=True),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('temperature_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_temperature_types_code'), ['code'], unique=True)

    op.create_table('tender_contracts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('contract_number', sa.String(length=50), nullable=False),
    sa.Column('contract_date', sa.Date(), nullable=False),
    sa.Column('contract_value', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('tender_reference', sa.String(length=100), nullable=True),
    sa.Column('tender_winner', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('erp_contract_id', sa.String(length=50), nullable=True),
    sa.Column('erp_sync_date', sa.DateTime(), nullable=True),
    sa.Column('contract_document_url', sa.String(length=255), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tender_contracts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tender_contracts_contract_number'), ['contract_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_tender_contracts_public_id'), ['public_id'], unique=True)

    op.create_table('warehouses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    with op.batch_alter_table('warehouses', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_warehouses_public_id'), ['public_id'], unique=True)

    op.create_table('carriers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('contact_info', sa.Text(), nullable=True),
    sa.Column('carrier_type_id', sa.Integer(), nullable=False),
    sa.Column('api_endpoint', sa.String(length=255), nullable=True),
    sa.Column('api_key', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['carrier_type_id'], ['carrier_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('name')
    )
    op.create_table('customers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('customer_type_id', sa.Integer(), nullable=False),
    sa.Column('sector_type_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer_type_id'], ['customer_types.id'], ),
    sa.ForeignKeyConstraint(['sector_type_id'], ['sector_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_customers_code'), ['code'], unique=True)
        batch_op.create_index(batch_op.f('ix_customers_public_id'), ['public_id'], unique=True)

    op.create_table('notification_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('notification_type_id', sa.Integer(), nullable=False),
    sa.Column('recipient_type', sa.String(length=20), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=True),
    sa.Column('recipient_email', sa.String(length=100), nullable=True),
    sa.Column('recipient_phone', sa.String(length=20), nullable=True),
    sa.Column('subject', sa.String(length=200), nullable=True),
    sa.Column('message_body', sa.Text(), nullable=True),
    sa.Column('delivery_method', sa.String(length=20), nullable=False),
    sa.Column('delivery_status', sa.String(length=20), nullable=True),
    sa.Column('delivery_attempts', sa.Integer(), nullable=True),
    sa.Column('entity_type', sa.String(length=50), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('external_message_id', sa.String(length=100), nullable=True),
    sa.Column('external_response', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('delivered_at', sa.DateTime(), nullable=True),
    sa.Column('failed_at', sa.DateTime(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_code', sa.String(length=50), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['notification_type_id'], ['notification_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('product_code', sa.String(length=25), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('manufacturer', sa.String(length=100), nullable=True),
    sa.Column('product_type_id', sa.Integer(), nullable=False),
    sa.Column('package_type_id', sa.Integer(), nullable=False),
    sa.Column('temperature_type_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['package_type_id'], ['package_types.id'], ),
    sa.ForeignKeyConstraint(['product_type_id'], ['product_types.id'], ),
    sa.ForeignKeyConstraint(['temperature_type_id'], ['temperature_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_products_product_code'), ['product_code'], unique=True)
        batch_op.create_index(batch_op.f('ix_products_public_id'), ['public_id'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.String(length=20), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('emergency_contact', sa.String(length=100), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('department', sa.String(length=50), nullable=True),
    sa.Column('position', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_locked', sa.Boolean(), nullable=True),
    sa.Column('password_expires_at', sa.DateTime(), nullable=True),
    sa.Column('must_change_password', sa.Boolean(), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=True),
    sa.Column('locked_until', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('last_login_ip', sa.String(length=45), nullable=True),
    sa.Column('current_session_id', sa.String(length=64), nullable=True),
    sa.Column('session_expires_at', sa.DateTime(), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('language', sa.String(length=5), nullable=True),
    sa.Column('date_format', sa.String(length=20), nullable=True),
    sa.Column('assigned_warehouse_id', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('last_modified_by', sa.String(length=50), nullable=True),
    sa.Column('last_modified_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_public_id'), ['public_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_user_id'), ['user_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=20), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('old_values', sa.JSON(), nullable=True),
    sa.Column('new_values', sa.JSON(), nullable=True),
    sa.Column('changed_fields', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('request_id', sa.String(length=36), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('severity', sa.String(length=10), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_audit_logs_action'), ['action'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_entity_id'), ['entity_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_entity_type'), ['entity_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_timestamp'), ['timestamp'], unique=False)

    op.create_table('batches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('lot_number', sa.String(length=50), nullable=False),
    sa.Column('expiry_date', sa.Date(), nullable=False),
    sa.Column('NIE', sa.String(length=50), nullable=False),
    sa.Column('received_quantity', sa.Integer(), nullable=False),
    sa.Column('receipt_document', sa.String(length=25), nullable=False),
    sa.Column('receipt_date', sa.Date(), nullable=False),
    sa.Column('receipt_pic', sa.String(length=25), nullable=True),
    sa.Column('receipt_doc_url', sa.String(length=255), nullable=True),
    sa.Column('length', sa.Float(), nullable=True),
    sa.Column('width', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('batches', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_batches_public_id'), ['public_id'], unique=True)

    op.create_table('consignment_agreements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('agreement_number', sa.String(length=50), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('agreement_date', sa.Date(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('commission_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('payment_terms_days', sa.Integer(), nullable=True),
    sa.Column('return_policy_days', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('contract_document_url', sa.String(length=255), nullable=True),
    sa.Column('terms_document_url', sa.String(length=255), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('approved_by', sa.String(length=50), nullable=True),
    sa.Column('approved_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('consignment_agreements', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_consignment_agreements_agreement_number'), ['agreement_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_consignment_agreements_public_id'), ['public_id'], unique=True)

    op.create_table('customer_addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('address_name', sa.String(length=100), nullable=False),
    sa.Column('address_type', sa.String(length=20), nullable=True),
    sa.Column('address_line1', sa.String(length=200), nullable=False),
    sa.Column('address_line2', sa.String(length=200), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=False),
    sa.Column('state_province', sa.String(length=50), nullable=True),
    sa.Column('postal_code', sa.String(length=10), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('contact_person', sa.String(length=100), nullable=True),
    sa.Column('contact_phone', sa.String(length=20), nullable=True),
    sa.Column('contact_email', sa.String(length=100), nullable=True),
    sa.Column('delivery_instructions', sa.Text(), nullable=True),
    sa.Column('special_requirements', sa.Text(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('customer_addresses', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_customer_addresses_public_id'), ['public_id'], unique=True)

    op.create_table('sales_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('so_number', sa.String(length=50), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('so_date', sa.Date(), nullable=False),
    sa.Column('delivery_date', sa.Date(), nullable=True),
    sa.Column('total_amount', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('erp_so_id', sa.String(length=50), nullable=True),
    sa.Column('erp_sync_date', sa.DateTime(), nullable=True),
    sa.Column('input_by', sa.String(length=50), nullable=True),
    sa.Column('input_date', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('special_instructions', sa.Text(), nullable=True),
    sa.Column('tender_contract_id', sa.Integer(), nullable=True),
    sa.Column('packing_slip_id', sa.Integer(), nullable=True),
    sa.Column('is_tender_so', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['packing_slip_id'], ['packing_slips.id'], ),
    sa.ForeignKeyConstraint(['tender_contract_id'], ['tender_contracts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('sales_orders', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sales_orders_public_id'), ['public_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_sales_orders_so_number'), ['so_number'], unique=True)

    op.create_table('user_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('activity_type', sa.String(length=50), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('additional_data', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_activities', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_activities_activity_type'), ['activity_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_activities_entity_type'), ['entity_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_activities_timestamp'), ['timestamp'], unique=False)

    op.create_table('user_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=64), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_activity', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('logout_reason', sa.String(length=50), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_sessions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_sessions_session_id'), ['session_id'], unique=True)

    op.create_table('allocations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('allocated_quantity', sa.Integer(), nullable=True),
    sa.Column('shipped_quantity', sa.Integer(), nullable=True),
    sa.Column('reserved_quantity', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('allocation_type_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('tender_contract_id', sa.Integer(), nullable=True),
    sa.Column('original_reserved_quantity', sa.Integer(), nullable=True),
    sa.Column('customer_allocated_quantity', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['allocation_type_id'], ['allocation_types.id'], ),
    sa.ForeignKeyConstraint(['batch_id'], ['batches.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['tender_contract_id'], ['tender_contracts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('allocations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_allocations_public_id'), ['public_id'], unique=True)

    op.create_table('consignment_statements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('statement_number', sa.String(length=50), nullable=False),
    sa.Column('agreement_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('period_start', sa.Date(), nullable=False),
    sa.Column('period_end', sa.Date(), nullable=False),
    sa.Column('total_shipped_value', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('total_sold_value', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('total_returned_value', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('total_commission', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('net_amount_due', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('payment_status', sa.String(length=20), nullable=True),
    sa.Column('payment_due_date', sa.Date(), nullable=True),
    sa.Column('payment_received_date', sa.Date(), nullable=True),
    sa.Column('payment_amount', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('statement_document_url', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('generated_by', sa.String(length=50), nullable=True),
    sa.Column('generated_date', sa.DateTime(), nullable=True),
    sa.Column('sent_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agreement_id'], ['consignment_agreements.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('statement_number')
    )
    with op.batch_alter_table('consignment_statements', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_consignment_statements_public_id'), ['public_id'], unique=True)

    op.create_table('sales_order_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('line_number', sa.Integer(), nullable=True),
    sa.Column('quantity_requested', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('total_price', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('sales_order_id', sa.Integer(), nullable=False),
    sa.Column('required_delivery_date', sa.Date(), nullable=True),
    sa.Column('temperature_requirement', sa.String(length=50), nullable=True),
    sa.Column('special_handling', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('erp_item_id', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['sales_order_id'], ['sales_orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shipping_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('plan_number', sa.String(length=50), nullable=False),
    sa.Column('planned_delivery_date', sa.Date(), nullable=False),
    sa.Column('actual_delivery_date', sa.Date(), nullable=True),
    sa.Column('sales_order_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('shipping_method', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('confirmed_by', sa.String(length=50), nullable=True),
    sa.Column('confirmed_date', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('delivery_address', sa.Text(), nullable=True),
    sa.Column('contact_person', sa.String(length=100), nullable=True),
    sa.Column('contact_phone', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['sales_order_id'], ['sales_orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('shipping_plans', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_shipping_plans_plan_number'), ['plan_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_shipping_plans_public_id'), ['public_id'], unique=True)

    op.create_table('contract_reservations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contract_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('allocation_id', sa.Integer(), nullable=False),
    sa.Column('reserved_quantity', sa.Integer(), nullable=False),
    sa.Column('allocated_quantity', sa.Integer(), nullable=True),
    sa.Column('remaining_quantity', sa.Integer(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['allocation_id'], ['allocations.id'], ),
    sa.ForeignKeyConstraint(['batch_id'], ['batches.id'], ),
    sa.ForeignKeyConstraint(['contract_id'], ['tender_contracts.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('picking_lists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('picking_list_number', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('shipping_plan_id', sa.Integer(), nullable=False),
    sa.Column('packing_slip_id', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['packing_slip_id'], ['packing_slips.id'], ),
    sa.ForeignKeyConstraint(['shipping_plan_id'], ['shipping_plans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('picking_lists', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_picking_lists_picking_list_number'), ['picking_list_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_picking_lists_public_id'), ['public_id'], unique=True)

    op.create_table('racks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('zone', sa.String(length=10), nullable=True),
    sa.Column('row', sa.String(length=10), nullable=True),
    sa.Column('level', sa.String(length=10), nullable=True),
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.Column('allocation_id', sa.Integer(), nullable=True),
    sa.Column('location_type_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['allocation_id'], ['allocations.id'], ),
    sa.ForeignKeyConstraint(['location_type_id'], ['location_types.id'], ),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('racks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_racks_code'), ['code'], unique=True)
        batch_op.create_index(batch_op.f('ix_racks_public_id'), ['public_id'], unique=True)

    op.create_table('shipments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('shipment_number', sa.String(length=50), nullable=False),
    sa.Column('shipping_plan_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('tracking_number', sa.String(length=100), nullable=True),
    sa.Column('carrier', sa.String(length=100), nullable=True),
    sa.Column('shipping_method', sa.String(length=50), nullable=True),
    sa.Column('shipment_date', sa.Date(), nullable=True),
    sa.Column('estimated_delivery_date', sa.Date(), nullable=True),
    sa.Column('actual_delivery_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('pickup_address', sa.Text(), nullable=True),
    sa.Column('contact_person', sa.String(length=100), nullable=True),
    sa.Column('contact_phone', sa.String(length=20), nullable=True),
    sa.Column('contact_email', sa.String(length=100), nullable=True),
    sa.Column('total_weight', sa.Float(), nullable=True),
    sa.Column('total_volume', sa.Float(), nullable=True),
    sa.Column('total_boxes', sa.Integer(), nullable=True),
    sa.Column('shipping_cost', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('insurance_cost', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('total_value', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('shipped_by', sa.String(length=50), nullable=True),
    sa.Column('shipped_date', sa.DateTime(), nullable=True),
    sa.Column('delivery_instructions', sa.Text(), nullable=True),
    sa.Column('handling_instructions', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('courier_booking_id', sa.String(length=100), nullable=True),
    sa.Column('pod_document_url', sa.String(length=255), nullable=True),
    sa.Column('packing_slip_id', sa.Integer(), nullable=False),
    sa.Column('delivery_address_id', sa.Integer(), nullable=True),
    sa.Column('custom_delivery_address', sa.Text(), nullable=True),
    sa.Column('custom_contact_person', sa.String(length=100), nullable=True),
    sa.Column('custom_contact_phone', sa.String(length=20), nullable=True),
    sa.Column('custom_delivery_instructions', sa.Text(), nullable=True),
    sa.Column('use_custom_address', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['delivery_address_id'], ['customer_addresses.id'], ),
    sa.ForeignKeyConstraint(['packing_slip_id'], ['packing_slips.id'], ),
    sa.ForeignKeyConstraint(['shipping_plan_id'], ['shipping_plans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('shipments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_shipments_public_id'), ['public_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_shipments_shipment_number'), ['shipment_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_shipments_tracking_number'), ['tracking_number'], unique=True)

    op.create_table('shipping_plan_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity_to_fulfill', sa.Integer(), nullable=False),
    sa.Column('shipping_plan_id', sa.Integer(), nullable=False),
    sa.Column('sales_order_item_id', sa.Integer(), nullable=False),
    sa.Column('line_number', sa.Integer(), nullable=True),
    sa.Column('planned_date', sa.Date(), nullable=True),
    sa.Column('temperature_requirement', sa.String(length=50), nullable=True),
    sa.Column('special_handling', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['sales_order_item_id'], ['sales_order_items.id'], ),
    sa.ForeignKeyConstraint(['shipping_plan_id'], ['shipping_plans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('consignments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('consignment_number', sa.String(length=50), nullable=False),
    sa.Column('agreement_id', sa.Integer(), nullable=False),
    sa.Column('allocation_id', sa.Integer(), nullable=False),
    sa.Column('shipment_id', sa.Integer(), nullable=True),
    sa.Column('consignment_date', sa.Date(), nullable=False),
    sa.Column('expected_return_date', sa.Date(), nullable=True),
    sa.Column('actual_return_date', sa.Date(), nullable=True),
    sa.Column('total_value', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('commission_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('terms_conditions', sa.Text(), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('shipped_by', sa.String(length=50), nullable=True),
    sa.Column('shipped_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agreement_id'], ['consignment_agreements.id'], ),
    sa.ForeignKeyConstraint(['allocation_id'], ['allocations.id'], ),
    sa.ForeignKeyConstraint(['shipment_id'], ['shipments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('consignments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_consignments_consignment_number'), ['consignment_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_consignments_public_id'), ['public_id'], unique=True)

    op.create_table('picking_list_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity_to_pick', sa.Integer(), nullable=False),
    sa.Column('allocation_id', sa.Integer(), nullable=False),
    sa.Column('rack_id', sa.Integer(), nullable=False),
    sa.Column('shipping_plan_item_id', sa.Integer(), nullable=False),
    sa.Column('picking_list_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['allocation_id'], ['allocations.id'], ),
    sa.ForeignKeyConstraint(['picking_list_id'], ['picking_lists.id'], ),
    sa.ForeignKeyConstraint(['rack_id'], ['racks.id'], ),
    sa.ForeignKeyConstraint(['shipping_plan_item_id'], ['shipping_plan_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('picking_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('picking_order_number', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('picking_list_id', sa.Integer(), nullable=False),
    sa.Column('shipment_id', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('picked_by', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['picking_list_id'], ['picking_lists.id'], ),
    sa.ForeignKeyConstraint(['shipment_id'], ['shipments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('picking_orders', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_picking_orders_picking_order_number'), ['picking_order_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_picking_orders_public_id'), ['public_id'], unique=True)

    op.create_table('shipment_documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_type_id', sa.Integer(), nullable=False),
    sa.Column('document_number', sa.String(length=100), nullable=True),
    sa.Column('document_url', sa.String(length=255), nullable=True),
    sa.Column('file_name', sa.String(length=255), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('shipment_id', sa.Integer(), nullable=False),
    sa.Column('uploaded_by', sa.String(length=50), nullable=True),
    sa.Column('uploaded_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_type_id'], ['document_types.id'], ),
    sa.ForeignKeyConstraint(['shipment_id'], ['shipments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shipment_tracking',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('event_description', sa.Text(), nullable=True),
    sa.Column('event_location', sa.String(length=100), nullable=True),
    sa.Column('event_date', sa.DateTime(), nullable=True),
    sa.Column('shipment_id', sa.Integer(), nullable=False),
    sa.Column('external_tracking_id', sa.String(length=100), nullable=True),
    sa.Column('courier_status', sa.String(length=100), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('is_customer_visible', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['shipment_id'], ['shipments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('consignment_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('consignment_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('quantity_shipped', sa.Integer(), nullable=False),
    sa.Column('quantity_sold', sa.Integer(), nullable=True),
    sa.Column('quantity_returned', sa.Integer(), nullable=True),
    sa.Column('unit_value', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('total_value', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('selling_price', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('lot_number', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['batches.id'], ),
    sa.ForeignKeyConstraint(['consignment_id'], ['consignments.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('packing_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('packing_order_number', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('picking_order_id', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['picking_order_id'], ['picking_orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('packing_orders', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_packing_orders_packing_order_number'), ['packing_order_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_packing_orders_public_id'), ['public_id'], unique=True)

    op.create_table('picking_order_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity_requested', sa.Integer(), nullable=False),
    sa.Column('quantity_picked', sa.Integer(), nullable=False),
    sa.Column('allocation_id', sa.Integer(), nullable=False),
    sa.Column('rack_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('picking_list_item_id', sa.Integer(), nullable=True),
    sa.Column('scanned_at', sa.DateTime(), nullable=True),
    sa.Column('scanned_by', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('picking_order_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['allocation_id'], ['allocations.id'], ),
    sa.ForeignKeyConstraint(['picking_list_item_id'], ['picking_list_items.id'], ),
    sa.ForeignKeyConstraint(['picking_order_id'], ['picking_orders.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['rack_id'], ['racks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('consignment_returns',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('return_number', sa.String(length=50), nullable=False),
    sa.Column('consignment_id', sa.Integer(), nullable=False),
    sa.Column('consignment_item_id', sa.Integer(), nullable=False),
    sa.Column('return_date', sa.Date(), nullable=False),
    sa.Column('quantity_returned', sa.Integer(), nullable=False),
    sa.Column('return_reason', sa.String(length=100), nullable=True),
    sa.Column('condition', sa.String(length=50), nullable=True),
    sa.Column('qc_status', sa.String(length=20), nullable=True),
    sa.Column('qc_notes', sa.Text(), nullable=True),
    sa.Column('qc_by', sa.String(length=50), nullable=True),
    sa.Column('qc_date', sa.DateTime(), nullable=True),
    sa.Column('disposition', sa.String(length=50), nullable=True),
    sa.Column('restocked_quantity', sa.Integer(), nullable=True),
    sa.Column('disposed_quantity', sa.Integer(), nullable=True),
    sa.Column('return_document_url', sa.String(length=255), nullable=True),
    sa.Column('photos_url', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('initiated_by', sa.String(length=50), nullable=True),
    sa.Column('received_by', sa.String(length=50), nullable=True),
    sa.Column('received_date', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['consignment_id'], ['consignments.id'], ),
    sa.ForeignKeyConstraint(['consignment_item_id'], ['consignment_items.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('return_number')
    )
    with op.batch_alter_table('consignment_returns', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_consignment_returns_public_id'), ['public_id'], unique=True)

    op.create_table('consignment_sales',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('sale_number', sa.String(length=50), nullable=False),
    sa.Column('consignment_id', sa.Integer(), nullable=False),
    sa.Column('consignment_item_id', sa.Integer(), nullable=False),
    sa.Column('sale_date', sa.Date(), nullable=False),
    sa.Column('quantity_sold', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('total_value', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('commission_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('commission_amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('net_amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('end_customer_name', sa.String(length=100), nullable=True),
    sa.Column('end_customer_info', sa.Text(), nullable=True),
    sa.Column('invoice_number', sa.String(length=50), nullable=True),
    sa.Column('receipt_document_url', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('reported_by', sa.String(length=50), nullable=True),
    sa.Column('reported_date', sa.DateTime(), nullable=True),
    sa.Column('verified_by', sa.String(length=50), nullable=True),
    sa.Column('verified_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['consignment_id'], ['consignments.id'], ),
    sa.ForeignKeyConstraint(['consignment_item_id'], ['consignment_items.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('sale_number')
    )
    with op.batch_alter_table('consignment_sales', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_consignment_sales_public_id'), ['public_id'], unique=True)

    op.create_table('packing_boxes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('box_number', sa.String(length=50), nullable=False),
    sa.Column('box_type', sa.String(length=50), nullable=True),
    sa.Column('total_weight', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('packing_order_id', sa.Integer(), nullable=False),
    sa.Column('packaging_material_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['packaging_material_id'], ['packaging_materials.id'], ),
    sa.ForeignKeyConstraint(['packing_order_id'], ['packing_orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stock_movements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('movement_date', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('movement_type_id', sa.Integer(), nullable=False),
    sa.Column('allocation_id', sa.Integer(), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('picking_order_item_id', sa.Integer(), nullable=True),
    sa.Column('rack_id', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['allocation_id'], ['allocations.id'], ),
    sa.ForeignKeyConstraint(['batch_id'], ['batches.id'], ),
    sa.ForeignKeyConstraint(['movement_type_id'], ['movement_types.id'], ),
    sa.ForeignKeyConstraint(['picking_order_item_id'], ['picking_order_items.id'], ),
    sa.ForeignKeyConstraint(['rack_id'], ['racks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('packing_box_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity_packed', sa.Integer(), nullable=False),
    sa.Column('box_id', sa.Integer(), nullable=False),
    sa.Column('picking_order_item_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['box_id'], ['packing_boxes.id'], ),
    sa.ForeignKeyConstraint(['picking_order_item_id'], ['picking_order_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('packing_box_items')
    op.drop_table('stock_movements')
    op.drop_table('packing_boxes')
    with op.batch_alter_table('consignment_sales', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_consignment_sales_public_id'))

    op.drop_table('consignment_sales')
    with op.batch_alter_table('consignment_returns', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_consignment_returns_public_id'))

    op.drop_table('consignment_returns')
    op.drop_table('picking_order_items')
    with op.batch_alter_table('packing_orders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_packing_orders_public_id'))
        batch_op.drop_index(batch_op.f('ix_packing_orders_packing_order_number'))

    op.drop_table('packing_orders')
    op.drop_table('consignment_items')
    op.drop_table('shipment_tracking')
    op.drop_table('shipment_documents')
    with op.batch_alter_table('picking_orders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_picking_orders_public_id'))
        batch_op.drop_index(batch_op.f('ix_picking_orders_picking_order_number'))

    op.drop_table('picking_orders')
    op.drop_table('picking_list_items')
    with op.batch_alter_table('consignments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_consignments_public_id'))
        batch_op.drop_index(batch_op.f('ix_consignments_consignment_number'))

    op.drop_table('consignments')
    op.drop_table('shipping_plan_items')
    with op.batch_alter_table('shipments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_shipments_tracking_number'))
        batch_op.drop_index(batch_op.f('ix_shipments_shipment_number'))
        batch_op.drop_index(batch_op.f('ix_shipments_public_id'))

    op.drop_table('shipments')
    with op.batch_alter_table('racks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_racks_public_id'))
        batch_op.drop_index(batch_op.f('ix_racks_code'))

    op.drop_table('racks')
    with op.batch_alter_table('picking_lists', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_picking_lists_public_id'))
        batch_op.drop_index(batch_op.f('ix_picking_lists_picking_list_number'))

    op.drop_table('picking_lists')
    op.drop_table('contract_reservations')
    with op.batch_alter_table('shipping_plans', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_shipping_plans_public_id'))
        batch_op.drop_index(batch_op.f('ix_shipping_plans_plan_number'))

    op.drop_table('shipping_plans')
    op.drop_table('sales_order_items')
    with op.batch_alter_table('consignment_statements', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_consignment_statements_public_id'))

    op.drop_table('consignment_statements')
    with op.batch_alter_table('allocations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_allocations_public_id'))

    op.drop_table('allocations')
    with op.batch_alter_table('user_sessions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_sessions_session_id'))

    op.drop_table('user_sessions')
    with op.batch_alter_table('user_activities', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_activities_timestamp'))
        batch_op.drop_index(batch_op.f('ix_user_activities_entity_type'))
        batch_op.drop_index(batch_op.f('ix_user_activities_activity_type'))

    op.drop_table('user_activities')
    with op.batch_alter_table('sales_orders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sales_orders_so_number'))
        batch_op.drop_index(batch_op.f('ix_sales_orders_public_id'))

    op.drop_table('sales_orders')
    with op.batch_alter_table('customer_addresses', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_customer_addresses_public_id'))

    op.drop_table('customer_addresses')
    with op.batch_alter_table('consignment_agreements', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_consignment_agreements_public_id'))
        batch_op.drop_index(batch_op.f('ix_consignment_agreements_agreement_number'))

    op.drop_table('consignment_agreements')
    with op.batch_alter_table('batches', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_batches_public_id'))

    op.drop_table('batches')
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_audit_logs_timestamp'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_entity_type'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_entity_id'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_action'))

    op.drop_table('audit_logs')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_user_id'))
        batch_op.drop_index(batch_op.f('ix_users_public_id'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_products_public_id'))
        batch_op.drop_index(batch_op.f('ix_products_product_code'))

    op.drop_table('products')
    op.drop_table('notification_logs')
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_customers_public_id'))
        batch_op.drop_index(batch_op.f('ix_customers_code'))

    op.drop_table('customers')
    op.drop_table('carriers')
    with op.batch_alter_table('warehouses', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_warehouses_public_id'))

    op.drop_table('warehouses')
    with op.batch_alter_table('tender_contracts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tender_contracts_public_id'))
        batch_op.drop_index(batch_op.f('ix_tender_contracts_contract_number'))

    op.drop_table('tender_contracts')
    with op.batch_alter_table('temperature_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_temperature_types_code'))

    op.drop_table('temperature_types')
    with op.batch_alter_table('system_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_system_logs_timestamp'))
        batch_op.drop_index(batch_op.f('ix_system_logs_logger_name'))
        batch_op.drop_index(batch_op.f('ix_system_logs_level'))

    op.drop_table('system_logs')
    with op.batch_alter_table('system_configurations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_system_configurations_config_key'))
        batch_op.drop_index(batch_op.f('ix_system_configurations_category'))

    op.drop_table('system_configurations')
    with op.batch_alter_table('status_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_status_types_entity_type'))
        batch_op.drop_index(batch_op.f('ix_status_types_code'))

    op.drop_table('status_types')
    with op.batch_alter_table('shipping_methods', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_shipping_methods_code'))

    op.drop_table('shipping_methods')
    with op.batch_alter_table('sector_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sector_types_code'))

    op.drop_table('sector_types')
    with op.batch_alter_table('product_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_product_types_code'))

    op.drop_table('product_types')
    with op.batch_alter_table('priority_levels', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_priority_levels_code'))

    op.drop_table('priority_levels')
    with op.batch_alter_table('packing_slips', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_packing_slips_public_id'))
        batch_op.drop_index(batch_op.f('ix_packing_slips_ps_number'))
        batch_op.drop_index(batch_op.f('ix_packing_slips_do_number'))

    op.drop_table('packing_slips')
    with op.batch_alter_table('packaging_materials', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_packaging_materials_code'))

    op.drop_table('packaging_materials')
    with op.batch_alter_table('package_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_package_types_code'))

    op.drop_table('package_types')
    with op.batch_alter_table('notification_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notification_types_code'))

    op.drop_table('notification_types')
    with op.batch_alter_table('movement_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_movement_types_code'))

    op.drop_table('movement_types')
    with op.batch_alter_table('location_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_location_types_code'))

    op.drop_table('location_types')
    with op.batch_alter_table('document_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_document_types_code'))

    op.drop_table('document_types')
    op.drop_table('delivery_methods')
    with op.batch_alter_table('customer_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_customer_types_code'))

    op.drop_table('customer_types')
    with op.batch_alter_table('carrier_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_carrier_types_code'))

    op.drop_table('carrier_types')
    with op.batch_alter_table('allocation_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_allocation_types_code'))

    op.drop_table('allocation_types')
    # ### end Alembic commands ###
